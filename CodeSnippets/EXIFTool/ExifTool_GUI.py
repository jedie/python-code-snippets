#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4.1 on Mon Aug 27 19:12:13 2007

import wx

class FileHandler(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: FileHandler.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.InfoLable = wx.StaticText(self, -1, "ExifTools by Jens Diemer - GPL", style=wx.ALIGN_CENTRE|wx.ST_NO_AUTORESIZE)
        self.source_path = wx.TextCtrl(self, -1, "")
        self.button_source = wx.Button(self, -1, "source path")
        self.dest_path = wx.TextCtrl(self, -1, "")
        self.button_dest = wx.Button(self, -1, "destination path")
        self.move_files = wx.RadioButton(self, -1, "move files")
        self.copy_files = wx.RadioButton(self, -1, "copy files")
        self.button_start = wx.Button(self, -1, "start")
        self.button_exit = wx.Button(self, -1, "exit")
        self.simulate = wx.CheckBox(self, -1, "simulate only")
        self.output = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.set_source_path, self.button_source)
        self.Bind(wx.EVT_BUTTON, self.set_dest_path, self.button_dest)
        self.Bind(wx.EVT_BUTTON, self.on_start, self.button_start)
        self.Bind(wx.EVT_BUTTON, self.on_exit, self.button_exit)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: FileHandler.__set_properties
        self.SetTitle("File Handler")
        self.SetFocus()
        self.source_path.SetMinSize((400, 26))
        self.source_path.SetToolTipString("The source path with the image files")
        self.dest_path.SetMinSize((400, 24))
        self.dest_path.SetToolTipString("The destination directory for copy/moving the image files.")
        self.move_files.SetToolTipString("move the files from the source directory to the destination.")
        self.move_files.SetValue(1)
        self.copy_files.SetToolTipString("copy the files from the source directory to the destination.")
        self.simulate.SetToolTipString("Don't real copy/move files. Only simulate.")
        self.simulate.SetValue(1)
        self.output.SetMinSize((400,300))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: FileHandler.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(2, 2, 0, 0)
        sizer_1.Add(self.InfoLable, 0, wx.ALL|wx.EXPAND, 3)
        grid_sizer_1.Add(self.source_path, 0, wx.ALL, 3)
        grid_sizer_1.Add(self.button_source, 0, wx.ALIGN_RIGHT, 3)
        grid_sizer_1.Add(self.dest_path, 0, wx.ALL, 3)
        grid_sizer_1.Add(self.button_dest, 0, wx.ALIGN_RIGHT, 3)
        sizer_1.Add(grid_sizer_1, 1, wx.ALL|wx.EXPAND, 0)
        sizer_7.Add(self.move_files, 0, wx.ALL, 3)
        sizer_7.Add(self.copy_files, 0, wx.ALL, 3)
        sizer_1.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_6.Add(self.button_start, 0, wx.ALL, 3)
        sizer_6.Add(self.button_exit, 0, wx.ALL, 3)
        sizer_1.Add(sizer_6, 1, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(self.simulate, 0, wx.ALL, 3)
        sizer_1.Add(self.output, 0, wx.ALL|wx.EXPAND, 3)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

    def set_source_path(self, event): # wxGlade: FileHandler.<event_handler>
        print "Event handler `set_source_path' not implemented!"
        event.Skip()

    def set_dest_path(self, event): # wxGlade: FileHandler.<event_handler>
        print "Event handler `set_dest_path' not implemented!"
        event.Skip()

    def on_start(self, event): # wxGlade: FileHandler.<event_handler>
        print "Event handler `on_start' not implemented"
        event.Skip()

    def on_exit(self, event): # wxGlade: FileHandler.<event_handler>
        print "Event handler `on_exit' not implemented"
        event.Skip()

# end of class FileHandler


class ExifTool(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        file_handler = FileHandler(None, -1, "")
        self.SetTopWindow(file_handler)
        file_handler.Show()
        return 1

# end of class ExifTool

if __name__ == "__main__":
    exif_tool = ExifTool(0)
    exif_tool.MainLoop()
